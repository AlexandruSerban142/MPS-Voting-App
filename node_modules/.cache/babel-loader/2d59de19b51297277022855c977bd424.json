{"remainingRequest":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/thread-loader/dist/cjs.js!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/babel-loader/lib/index.js!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/components/ContestClassicVotingRound.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/components/ContestClassicVotingRound.vue","mtime":1573408857477},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/thread-loader/dist/cjs.js","mtime":1572617093804},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/babel-loader/lib/index.js","mtime":1572617092984},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js","mtime":1573216109227}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapState, mapActions, mapMutations } from \"vuex\";\nimport { db } from \"@/main\";\nexport default {\n  props: {\n    contestId: {\n      required: true,\n      type: String\n    },\n    stageId: {\n      required: true,\n      type: Number\n    },\n    roundId: {\n      required: true,\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      firstPlayer: {\n        name: null,\n        benchmarks: {}\n      },\n      secondPlayer: {\n        name: null,\n        benchmarks: {}\n      },\n      ratingsList: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    userId: function userId(state) {\n      return state.auth.authId;\n    },\n    benchmarks: function benchmarks(state) {\n      return state.contests.items[this.contestId].benchmarks;\n    },\n    round: function round(state) {\n      return state.contests.items[this.contestId].stages[this.stageId][this.roundId];\n    },\n    userAlreadyVoted: function userAlreadyVoted() {\n      return this.voters.includes(this.userId);\n    }\n  }), {\n    voters: function voters() {\n      return this.round.stats.users;\n    }\n  }),\n  methods: _objectSpread({}, mapActions(\"contests\", [\"sendRoundRating\"]), {\n    send: function send() {\n      this.sendRoundRating({\n        contestId: this.contestId,\n        stageId: this.stageId,\n        roundId: this.roundId,\n        players: [this.firstPlayer, this.secondPlayer],\n        benchmarks: this.benchmarks\n      });\n    }\n  }),\n  created: function created() {\n    var updatedRound = _objectSpread({}, this.round);\n\n    delete updatedRound.stats;\n    var players = Object.keys(updatedRound);\n\n    if (updatedRound[players[0]].score == \"disqualified\" && updatedRound[players[1]].score == \"disqualified\") {\n      return;\n    }\n\n    if (updatedRound[players[0]] == null) {\n      this.firstPlayer.name = players[0];\n      this.secondPlayer.name = \"-\";\n    } else {\n      this.firstPlayer.name = players[0];\n      this.secondPlayer.name = players[1];\n    }\n\n    this.firstPlayer.benchmarks = updatedRound[players[0]];\n    this.secondPlayer.benchmarks = updatedRound[players[1]];\n  }\n};",{"version":3,"sources":["ContestClassicVotingRound.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div>\n      <button style=\"margin-left: .5rem\" class=\"btn btn-primary\">\n        {{ firstPlayer.name }}\n      </button>\n      <label class=\"form-control-label\">vs</label>\n      <button style=\"margin: 0 .5rem 0 .5rem; \" class=\"btn btn-primary my-4\">\n        {{ secondPlayer.name == null ? \"-\" : secondPlayer.name }}\n      </button>\n    </div>\n    <div v-if=\"!userAlreadyVoted\">\n      <label class=\"form-control-label\">Select Benchmarks Ratings</label>\n      <div\n        v-for=\"(benchmark, benchmarkKey, benchmarkIndex) in benchmarks\"\n        :key=\"benchmarkIndex\"\n      >\n        <select v-model=\"firstPlayer.benchmarks[benchmark]\">\n          <option disabled value>Score</option>\n          <option\n            v-for=\"(rating, ratingIndex) in ratingsList\"\n            :key=\"ratingIndex\"\n            >{{ rating }}</option\n          >\n        </select>\n\n        <button style=\"margin: 0 2rem 0 2rem; \" class=\"btn btn-primary my-4\">\n          {{ benchmark }}\n        </button>\n\n        <select v-model=\"secondPlayer.benchmarks[benchmark]\">\n          <option disabled value>Score</option>\n          <option\n            v-for=\"(rating, ratingIndex) in ratingsList\"\n            :key=\"ratingIndex\"\n            >{{ rating }}</option\n          >\n        </select>\n      </div>\n      <button @click=\"send()\" class=\"btn btn-primary my-4\">Send Ratings</button>\n    </div>\n    <div v-else>You already submited your vote for this round !</div>\n    <hr />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapActions, mapMutations } from \"vuex\";\n\nimport { db } from \"@/main\";\n\nexport default {\n  props: {\n    contestId: { required: true, type: String },\n    stageId: { required: true, type: Number },\n    roundId: { required: true, type: String }\n  },\n\n  data() {\n    return {\n      firstPlayer: {\n        name: null,\n        benchmarks: {}\n      },\n\n      secondPlayer: {\n        name: null,\n        benchmarks: {}\n      },\n\n      ratingsList: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    };\n  },\n\n  computed: {\n    ...mapState({\n      userId(state) {\n        return state.auth.authId;\n      },\n\n      benchmarks(state) {\n        return state.contests.items[this.contestId].benchmarks;\n      },\n\n      round(state) {\n        return state.contests.items[this.contestId].stages[this.stageId][\n          this.roundId\n        ];\n      },\n\n      userAlreadyVoted() {\n        return this.voters.includes(this.userId);\n      }\n    }),\n\n    voters() {\n      return this.round.stats.users;\n    }\n  },\n\n  methods: {\n    ...mapActions(\"contests\", [\"sendRoundRating\"]),\n\n    send() {\n      this.sendRoundRating({\n        contestId: this.contestId,\n        stageId: this.stageId,\n        roundId: this.roundId,\n        players: [this.firstPlayer, this.secondPlayer],\n        benchmarks: this.benchmarks\n      });\n    }\n  },\n\n  created() {\n    let updatedRound = { ...this.round };\n    delete updatedRound.stats;\n\n    let players = Object.keys(updatedRound);\n\n    if (\n      updatedRound[players[0]].score == \"disqualified\" &&\n      updatedRound[players[1]].score == \"disqualified\"\n    ) {\n      return;\n    }\n\n    if (updatedRound[players[0]] == null) {\n      this.firstPlayer.name = players[0];\n\n      this.secondPlayer.name = \"-\";\n    } else {\n      this.firstPlayer.name = players[0];\n\n      this.secondPlayer.name = players[1];\n    }\n\n    this.firstPlayer.benchmarks = updatedRound[players[0]];\n    this.secondPlayer.benchmarks = updatedRound[players[1]];\n  }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}