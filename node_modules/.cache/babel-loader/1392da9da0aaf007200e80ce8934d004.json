{"remainingRequest":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/thread-loader/dist/cjs.js!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/babel-loader/lib/index.js!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/components/ContestClassicBracketRound.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/components/ContestClassicBracketRound.vue","mtime":1573408857475},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/thread-loader/dist/cjs.js","mtime":1572617093804},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/babel-loader/lib/index.js","mtime":1572617092984},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js","mtime":1573216109227}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nexport default {\n  props: {\n    contestId: {\n      required: true,\n      type: String\n    },\n    stageId: {\n      required: true,\n      type: String\n    },\n    roundId: {\n      required: true,\n      type: String\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    round: function round(state) {\n      return state.contests.items[this.contestId].stages[this.stageId][this.roundId];\n    }\n  }), {\n    isStarted: function isStarted() {\n      if (this.firstPlayer.score == \"disqualified\" || this.secondPlayer.score == \"disqualified\") return true;\n      return this.firstPlayer.score != 0 && this.secondPlayer.score != 0;\n    },\n    firstPlayerWon: function firstPlayerWon() {\n      if (this.round[this.firstPlayer.name] == null) return true;\n      if (this.round.stats.winner) return this.round.stats.winner == this.firstPlayer.name ? true : false;\n      return false;\n    },\n    benchmarks: function benchmarks() {\n      var benchmarksList = _objectSpread({}, this.round[this.firstPlayer.name]);\n\n      if (benchmarksList[Object.keys(benchmarksList)[0]] == null) return null;\n      delete benchmarksList.score;\n      return benchmarksList;\n    },\n    firstPlayer: function firstPlayer() {\n      var updatedRound = _objectSpread({}, this.round);\n\n      delete updatedRound.stats;\n      var players = Object.keys(updatedRound);\n      if (updatedRound[players[0]] == null) return {\n        name: players[0],\n        score: null\n      };\n      return {\n        name: players[0],\n        score: this.round[players[0]].score\n      };\n    },\n    secondPlayer: function secondPlayer() {\n      var updatedRound = _objectSpread({}, this.round);\n\n      delete updatedRound.stats;\n      var players = Object.keys(updatedRound);\n      if (updatedRound[players[0]] == null) return {\n        name: \"-\",\n        score: null\n      };\n      return {\n        name: players[1],\n        score: this.round[players[1]].score\n      };\n    }\n  }),\n  methods: {\n    score: function score(player) {\n      return player.score == null || player.score == 0 || player.score == \"disqualified\" || isNaN(player.score) ? \"\" : \"\".concat(player.score, \"pct\");\n    },\n    isDisqualified: function isDisqualified(playerName) {\n      if (this.round[playerName] && this.round[playerName].score) return this.round[playerName].score == \"disqualified\";\n      return false;\n    }\n  }\n};",{"version":3,"sources":["ContestClassicBracketRound.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div>\n      <label class=\"form-control-label\">{{ score(firstPlayer) }}</label>\n      <button\n        style=\"margin-left: .5rem\"\n        class=\"btn btn-primary\"\n        v-bind:class=\"[\n          isStarted\n            ? firstPlayerWon\n              ? 'win'\n              : isDisqualified(firstPlayer.name)\n              ? 'disqualified'\n              : 'lose'\n            : ''\n        ]\"\n      >\n        {{ firstPlayer.name }}\n      </button>\n      <label class=\"form-control-label\">vs</label>\n      <button\n        style=\"margin: 0 .5rem 0 .5rem; \"\n        class=\"btn btn-primary my-4\"\n        v-bind:class=\"[\n          isStarted\n            ? firstPlayerWon\n              ? isDisqualified(secondPlayer.name)\n                ? 'disqualified'\n                : 'lose'\n              : 'win'\n            : ''\n        ]\"\n      >\n        {{ secondPlayer.name == \"undefined\" ? \"-\" : secondPlayer.name }}\n      </button>\n      <label class=\"form-control-label\">{{ score(secondPlayer) }}</label>\n    </div>\n    <div>\n      <div v-for=\"(benchmark, key, index) in benchmarks\" :key=\"index\">\n        {{ `${key}: ${benchmark} - ${round[secondPlayer.name][key]}` }}\n      </div>\n      <br />\n      <br />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  props: {\n    contestId: {\n      required: true,\n      type: String\n    },\n\n    stageId: {\n      required: true,\n      type: String\n    },\n\n    roundId: {\n      required: true,\n      type: String\n    }\n  },\n\n  computed: {\n    ...mapState({\n      round(state) {\n        return state.contests.items[this.contestId].stages[this.stageId][\n          this.roundId\n        ];\n      }\n    }),\n\n    isStarted() {\n      if (\n        this.firstPlayer.score == \"disqualified\" ||\n        this.secondPlayer.score == \"disqualified\"\n      )\n        return true;\n      return this.firstPlayer.score != 0 && this.secondPlayer.score != 0;\n    },\n\n    firstPlayerWon() {\n      if (this.round[this.firstPlayer.name] == null) return true;\n      if (this.round.stats.winner)\n        return this.round.stats.winner == this.firstPlayer.name ? true : false;\n      return false;\n    },\n\n    benchmarks() {\n      let benchmarksList = { ...this.round[this.firstPlayer.name] };\n      if (benchmarksList[Object.keys(benchmarksList)[0]] == null) return null;\n      delete benchmarksList.score;\n\n      return benchmarksList;\n    },\n\n    firstPlayer() {\n      let updatedRound = { ...this.round };\n      delete updatedRound.stats;\n\n      let players = Object.keys(updatedRound);\n\n      if (updatedRound[players[0]] == null)\n        return {\n          name: players[0],\n          score: null\n        };\n\n      return {\n        name: players[0],\n        score: this.round[players[0]].score\n      };\n    },\n\n    secondPlayer() {\n      let updatedRound = { ...this.round };\n      delete updatedRound.stats;\n\n      let players = Object.keys(updatedRound);\n\n      if (updatedRound[players[0]] == null)\n        return {\n          name: \"-\",\n          score: null\n        };\n\n      return {\n        name: players[1],\n        score: this.round[players[1]].score\n      };\n    }\n  },\n\n  methods: {\n    score(player) {\n      return player.score == null ||\n        player.score == 0 ||\n        player.score == \"disqualified\" ||\n        isNaN(player.score)\n        ? \"\"\n        : `${player.score}pct`;\n    },\n\n    isDisqualified(playerName) {\n      if (this.round[playerName] && this.round[playerName].score)\n        return this.round[playerName].score == \"disqualified\";\n\n      return false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.win {\n  background-color: green !important;\n}\n\n.lose {\n  background-color: red !important;\n}\n\n.disqualified {\n  background-color: gray !important;\n}\n</style>\n"],"sourceRoot":"src/components"}]}