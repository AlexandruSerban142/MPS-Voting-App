{"remainingRequest":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/babel-loader/lib/index.js!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/components/RemovePlayer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/components/RemovePlayer.vue","mtime":1573408857480},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/babel-loader/lib/index.js","mtime":1572617092984},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js","mtime":1573216109227}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport _slicedToArray from \"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapState, mapActions, mapMutations } from \"vuex\";\nexport default {\n  props: {\n    contestId: {\n      required: true,\n      type: String\n    },\n    stageId: {\n      required: true,\n      type: Number\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    contest: function contest(state) {\n      return state.contests.items[this.contestId];\n    }\n  }), {\n    rounds: function rounds() {\n      return this.contest.stages[this.stageId];\n    }\n  }),\n  methods: _objectSpread({}, mapActions(\"contests\", [\"disqualifyPlayer\"]), {\n    updatedRound: function updatedRound(round) {\n      var newRound = _objectSpread({}, round);\n\n      for (var _i = 0, _Object$entries = Object.entries(newRound); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        if (key == \"stats\") delete newRound[key];\n        if (value == null) return null;\n      }\n\n      var keys = Object.keys(newRound);\n      if (newRound[keys[0]].score == \"disqualified\" || newRound[keys[1]].score == \"disqualified\") return null;\n      return newRound;\n    },\n    removePlayer: function removePlayer(playerName, roundId, round) {\n      var opponentName = null;\n\n      for (var _i2 = 0, _Object$entries2 = Object.entries(this.updatedRound(round)); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n            key = _Object$entries2$_i[0],\n            value = _Object$entries2$_i[1];\n\n        if (key != playerName) opponentName = key;\n      }\n\n      this.disqualifyPlayer({\n        playerName: playerName,\n        opponentName: opponentName,\n        roundId: roundId,\n        stageId: this.stageId,\n        contestId: this.contestId\n      });\n    }\n  })\n};",{"version":3,"sources":["RemovePlayer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,SAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,YAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KADA;AAMA,IAAA,OAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA;AANA,GADA;AAaA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,OADA,mBACA,KADA,EACA;AACA,aAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,SAAA,CAAA;AACA;AAHA,GAAA,CADA;AAOA,IAAA,MAPA,oBAOA;AACA,aAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,OAAA,CAAA;AACA;AATA,IAbA;AAyBA,EAAA,OAAA,oBACA,UAAA,CAAA,UAAA,EAAA,CAAA,kBAAA,CAAA,CADA;AAGA,IAAA,YAHA,wBAGA,KAHA,EAGA;AACA,UAAA,QAAA,qBAAA,KAAA,CAAA;;AACA,yCAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,qCAAA;AAAA;AAAA,YAAA,GAAA;AAAA,YAAA,KAAA;;AACA,YAAA,GAAA,IAAA,OAAA,EAAA,OAAA,QAAA,CAAA,GAAA,CAAA;AACA,YAAA,KAAA,IAAA,IAAA,EAAA,OAAA,IAAA;AACA;;AAEA,UAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA;AACA,UACA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,IAAA,cAAA,IACA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,IAAA,cAFA,EAIA,OAAA,IAAA;AACA,aAAA,QAAA;AACA,KAjBA;AAmBA,IAAA,YAnBA,wBAmBA,UAnBA,EAmBA,OAnBA,EAmBA,KAnBA,EAmBA;AACA,UAAA,YAAA,GAAA,IAAA;;AACA,2CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,YAAA,CAAA,KAAA,CAAA,CAAA,wCAAA;AAAA;AAAA,YAAA,GAAA;AAAA,YAAA,KAAA;;AACA,YAAA,GAAA,IAAA,UAAA,EAAA,YAAA,GAAA,GAAA;AACA;;AAEA,WAAA,gBAAA,CAAA;AACA,QAAA,UAAA,EAAA,UADA;AAEA,QAAA,YAAA,EAAA,YAFA;AAGA,QAAA,OAAA,EAAA,OAHA;AAIA,QAAA,OAAA,EAAA,KAAA,OAJA;AAKA,QAAA,SAAA,EAAA,KAAA;AALA,OAAA;AAOA;AAhCA;AAzBA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"row justify-content-center\">\n      <div class=\"col-lg-12\">\n        <div class=\"card bg-secondary shadow border-0\">\n          <div class=\"card-body py-lg-5\">\n            <label class=\"form-control-label\"\n              >Disqualify Players from current Stage:</label\n            >\n            <ul\n              v-for=\"(round, roundKey, roundIndex) in rounds\"\n              :key=\"roundIndex\"\n            >\n              <li\n                style=\"text-align:left\"\n                v-for=\"(player, playerKey, playerIndex) in updatedRound(round)\"\n                :key=\"playerIndex\"\n              >\n                {{ playerKey }}\n                <span class=\"btn-inner--icon\">\n                  <img\n                    @click.prevent=\"removePlayer(playerKey, roundKey, round)\"\n                    width=\"12px\"\n                    src=\"../assets/cancel-icon.png\"\n                  />\n                </span>\n              </li>\n            </ul>\n            <br />\n            <div>\n              <label class=\"form-control-label\">Contest QR Code:</label>\n              <qrcode\n                value=\"`//localhost/:8080/contest/${contestID}?judge=true`\"\n                :options=\"{ width: 200 }\"\n              ></qrcode>\n              <button disabled>Print QR Code</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapActions, mapMutations } from \"vuex\";\n\nexport default {\n  props: {\n    contestId: {\n      required: true,\n      type: String\n    },\n\n    stageId: {\n      required: true,\n      type: Number\n    }\n  },\n\n  computed: {\n    ...mapState({\n      contest(state) {\n        return state.contests.items[this.contestId];\n      }\n    }),\n\n    rounds() {\n      return this.contest.stages[this.stageId];\n    }\n  },\n\n  methods: {\n    ...mapActions(\"contests\", [\"disqualifyPlayer\"]),\n\n    updatedRound(round) {\n      let newRound = { ...round };\n      for (let [key, value] of Object.entries(newRound)) {\n        if (key == \"stats\") delete newRound[key];\n        if (value == null) return null;\n      }\n\n      const keys = Object.keys(newRound);\n      if (\n        newRound[keys[0]].score == \"disqualified\" ||\n        newRound[keys[1]].score == \"disqualified\"\n      )\n        return null;\n      return newRound;\n    },\n\n    removePlayer(playerName, roundId, round) {\n      let opponentName = null;\n      for (let [key, value] of Object.entries(this.updatedRound(round))) {\n        if (key != playerName) opponentName = key;\n      }\n\n      this.disqualifyPlayer({\n        playerName,\n        opponentName,\n        roundId,\n        stageId: this.stageId,\n        contestId: this.contestId\n      });\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}