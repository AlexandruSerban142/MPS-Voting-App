{"remainingRequest":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/components/ContestCreator.vue?vue&type=template&id=231056a8&scoped=true&","dependencies":[{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/components/ContestCreator.vue","mtime":1573408857478},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1573216109227},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js","mtime":1573216109227}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n    _c(\"div\", { staticClass: \"col-lg-6 col-md-8\" }, [\n      _c(\"div\", { staticClass: \"card bg-secondary shadow border-0\" }, [\n        _c(\"div\", { staticClass: \"card-body px-lg-5 py-lg-5\" }, [\n          _c(\"small\", [_vm._v(\"New Contest\")]),\n          _c(\"form\", [\n            _c(\"div\", { staticClass: \"form-group mb\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"input-group input-group-alternative mb-3\" },\n                [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.contest.name,\n                        expression: \"contest.name\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { placeholder: \"Contest Name\", type: \"text\" },\n                    domProps: { value: _vm.contest.name },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.contest, \"name\", $event.target.value)\n                      }\n                    }\n                  })\n                ]\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"input-group input-group-alternative mb-3\" },\n                [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.contest.description,\n                        expression: \"contest.description\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { placeholder: \"Contest Description\", type: \"text\" },\n                    domProps: { value: _vm.contest.description },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.contest,\n                          \"description\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  })\n                ]\n              ),\n              _c(\"div\", { staticStyle: { \"text-align\": \"left\" } }, [\n                _c(\n                  \"label\",\n                  {\n                    staticClass: \"form-control-label\",\n                    staticStyle: { \"margin-right\": \"70px\" }\n                  },\n                  [_vm._v(\"Contest Type\")]\n                ),\n                _c(\"label\", { staticClass: \"radio-inline\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.contest.type,\n                        expression: \"contest.type\"\n                      }\n                    ],\n                    staticClass: \"custom-radio\",\n                    attrs: { value: \"Classic\", type: \"radio\", name: \"type\" },\n                    domProps: { checked: _vm._q(_vm.contest.type, \"Classic\") },\n                    on: {\n                      change: function($event) {\n                        return _vm.$set(_vm.contest, \"type\", \"Classic\")\n                      }\n                    }\n                  }),\n                  _vm._v(\"Classic\\n              \")\n                ]),\n                _c(\"label\", { staticClass: \"radio-inline\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.contest.type,\n                        expression: \"contest.type\"\n                      }\n                    ],\n                    staticClass: \"custom-radio\",\n                    attrs: {\n                      value: \"Other\",\n                      type: \"radio\",\n                      name: \"type\",\n                      disabled: \"\"\n                    },\n                    domProps: { checked: _vm._q(_vm.contest.type, \"Other\") },\n                    on: {\n                      change: function($event) {\n                        return _vm.$set(_vm.contest, \"type\", \"Other\")\n                      }\n                    }\n                  }),\n                  _vm._v(\"Others\\n              \")\n                ])\n              ])\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"row\", staticStyle: { \"margin-bottom\": \"20px\" } },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"col-lg-6\",\n                    staticStyle: { \"text-align\": \"left\" }\n                  },\n                  [\n                    _c(\"label\", { staticClass: \"form-control-label\" }, [\n                      _vm._v(\"Add New Benchmark (in importance order)\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.newBenchmark,\n                          expression: \"newBenchmark\"\n                        }\n                      ],\n                      staticClass: \"form-control form-control-alternative\",\n                      attrs: { type: \"text\", placeholder: \"ex: Pace\" },\n                      domProps: { value: _vm.newBenchmark },\n                      on: {\n                        keypress: function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            _vm._k(\n                              $event.keyCode,\n                              \"enter\",\n                              13,\n                              $event.key,\n                              \"Enter\"\n                            )\n                          ) {\n                            return null\n                          }\n                          $event.preventDefault()\n                          return _vm.addBenchMark()\n                        },\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.newBenchmark = $event.target.value\n                        }\n                      }\n                    })\n                  ]\n                ),\n                _c(\"div\", { staticClass: \"col-lg-6\" }, [\n                  _c(\"label\", { staticClass: \"form-control-label\" }, [\n                    _vm._v(\"Benchmarks\")\n                  ]),\n                  !_vm.contest.benchmarks.length\n                    ? _c(\n                        \"p\",\n                        {\n                          staticClass: \"form-control-label\",\n                          staticStyle: { \"margin-top\": \"10px\" }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                No benchmarks!\\n              \"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _c(\n                    \"ul\",\n                    _vm._l(_vm.contest.benchmarks, function(benchmark, index) {\n                      return _c(\n                        \"li\",\n                        { key: index, staticStyle: { \"text-align\": \"left\" } },\n                        [\n                          _vm._v(\n                            \"\\n                  \" +\n                              _vm._s(benchmark) +\n                              \"\\n                  \"\n                          ),\n                          _c(\"span\", { staticClass: \"btn-inner--icon\" }, [\n                            _c(\"img\", {\n                              attrs: {\n                                width: \"12px\",\n                                src: require(\"../assets/cancel-icon.png\")\n                              },\n                              on: {\n                                click: function($event) {\n                                  $event.preventDefault()\n                                  return _vm.contest.benchmarks.splice(index, 1)\n                                }\n                              }\n                            })\n                          ])\n                        ]\n                      )\n                    }),\n                    0\n                  )\n                ])\n              ]\n            ),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"col-lg-6\",\n                  staticStyle: { \"text-align\": \"left\" }\n                },\n                [\n                  _c(\"label\", { staticClass: \"form-control-label\" }, [\n                    _vm._v(\"Add New Player (in seed order)\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.newPlayer,\n                        expression: \"newPlayer\"\n                      }\n                    ],\n                    staticClass: \"form-control form-control-alternative\",\n                    attrs: { type: \"text\", placeholder: \"ex: Alex\" },\n                    domProps: { value: _vm.newPlayer },\n                    on: {\n                      keypress: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        $event.preventDefault()\n                        return _vm.addPlayer()\n                      },\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.newPlayer = $event.target.value\n                      }\n                    }\n                  }),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-primary my-4\",\n                      staticStyle: { float: \"left\" },\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.create()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n                Create Contest\\n              \")]\n                  )\n                ]\n              ),\n              _c(\"div\", { staticClass: \"col-lg-6\" }, [\n                _c(\"label\", { staticClass: \"form-control-label\" }, [\n                  _vm._v(\"Players\")\n                ]),\n                !_vm.players.length\n                  ? _c(\n                      \"p\",\n                      {\n                        staticClass: \"form-control-label\",\n                        staticStyle: { \"margin-top\": \"10px\" }\n                      },\n                      [_vm._v(\"\\n                No players!\\n              \")]\n                    )\n                  : _vm._e(),\n                _c(\n                  \"ul\",\n                  _vm._l(_vm.players, function(player, index) {\n                    return _c(\n                      \"li\",\n                      { key: index, staticStyle: { \"text-align\": \"left\" } },\n                      [\n                        _vm._v(\n                          \"\\n                  \" +\n                            _vm._s(player) +\n                            \"\\n                  \"\n                        ),\n                        _c(\"span\", { staticClass: \"btn-inner--icon\" }, [\n                          _c(\"img\", {\n                            attrs: {\n                              width: \"12px\",\n                              src: require(\"../assets/cancel-icon.png\")\n                            },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.players.splice(index, 1)\n                              }\n                            }\n                          })\n                        ])\n                      ]\n                    )\n                  }),\n                  0\n                )\n              ])\n            ])\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}