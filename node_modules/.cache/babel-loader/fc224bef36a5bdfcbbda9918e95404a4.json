{"remainingRequest":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/babel-loader/lib/index.js!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/views/PageContest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/views/PageContest.vue","mtime":1573408857483},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/babel-loader/lib/index.js","mtime":1572617092984},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js","mtime":1573216109227}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport asyncDataStatus from \"@/mixins/asyncDataStatus\";\nimport { mapGetters, mapState, mapActions, mapMutations } from \"vuex\";\nimport { db } from \"@/main\";\nimport ContestClassicBracket from \"@/components/ContestClassicBracket.vue\";\nimport ContestClassicVotingStage from \"@/components/ContestClassicVotingStage.vue\";\nimport RemovePlayer from \"@/components/RemovePlayer.vue\";\nexport default {\n  name: \"PageContest\",\n  mixins: [asyncDataStatus],\n  components: {\n    ContestClassicBracket: ContestClassicBracket,\n    ContestClassicVotingStage: ContestClassicVotingStage,\n    RemovePlayer: RemovePlayer\n  },\n  props: {\n    id: {\n      required: true,\n      type: String\n    },\n    isAllowedJudge: {\n      required: true,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      newPlayer: null\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    contest: function contest(state) {\n      return state.contests.items[this.id];\n    }\n  }), {}, mapGetters({\n    user: \"auth/authUser\"\n  }), {\n    isOrganizer: function isOrganizer() {\n      return this.user && this.user.role == \"organizer\";\n    },\n    isStarted: function isStarted() {\n      return this.contest.status == \"started\";\n    },\n    isFinished: function isFinished() {\n      return this.contest.status === \"finished\";\n    },\n    isPaused: function isPaused() {\n      return this.contest.status == \"paused\";\n    }\n  }),\n  methods: _objectSpread({}, mapActions(\"contests\", [\"fetchContest\", \"fetchContestRealTime\"]), {\n    start: function start() {\n      db.collection(\"contests\").doc(this.id).update({\n        status: \"started\"\n      });\n    }\n  }),\n  created: function created() {\n    var _this = this;\n\n    this.fetchContest(this.id).then(function () {\n      _this.asyncDataStatus_fetched();\n\n      _this.fetchContestRealTime(_this.id);\n    });\n  }\n};",{"version":3,"sources":["PageContest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,OAAA,eAAA,MAAA,0BAAA;AACA,SAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,YAAA,QAAA,MAAA;AACA,SAAA,EAAA,QAAA,QAAA;AACA,OAAA,qBAAA,MAAA,wCAAA;AACA,OAAA,yBAAA,MAAA,4CAAA;AACA,OAAA,YAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAGA,EAAA,MAAA,EAAA,CAAA,eAAA,CAHA;AAKA,EAAA,UAAA,EAAA;AACA,IAAA,qBAAA,EAAA,qBADA;AAEA,IAAA,yBAAA,EAAA,yBAFA;AAGA,IAAA,YAAA,EAAA;AAHA,GALA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KADA;AAMA,IAAA,cAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA;AAFA;AANA,GAXA;AAuBA,EAAA,IAvBA,kBAuBA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GA3BA;AA6BA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,OADA,mBACA,KADA,EACA;AACA,aAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA;AACA;AAHA,GAAA,CADA,MAOA,UAAA,CAAA;AACA,IAAA,IAAA,EAAA;AADA,GAAA,CAPA;AAWA,IAAA,WAXA,yBAWA;AACA,aAAA,KAAA,IAAA,IAAA,KAAA,IAAA,CAAA,IAAA,IAAA,WAAA;AACA,KAbA;AAeA,IAAA,SAfA,uBAeA;AACA,aAAA,KAAA,OAAA,CAAA,MAAA,IAAA,SAAA;AACA,KAjBA;AAmBA,IAAA,UAnBA,wBAmBA;AACA,aAAA,KAAA,OAAA,CAAA,MAAA,KAAA,UAAA;AACA,KArBA;AAuBA,IAAA,QAvBA,sBAuBA;AACA,aAAA,KAAA,OAAA,CAAA,MAAA,IAAA,QAAA;AACA;AAzBA,IA7BA;AAyDA,EAAA,OAAA,oBACA,UAAA,CAAA,UAAA,EAAA,CAAA,cAAA,EAAA,sBAAA,CAAA,CADA;AAGA,IAAA,KAHA,mBAGA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EACA,GADA,CACA,KAAA,EADA,EAEA,MAFA,CAEA;AACA,QAAA,MAAA,EAAA;AADA,OAFA;AAKA;AATA,IAzDA;AAqEA,EAAA,OArEA,qBAqEA;AAAA;;AACA,SAAA,YAAA,CAAA,KAAA,EAAA,EAAA,IAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,uBAAA;;AACA,MAAA,KAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,EAAA;AACA,KAHA;AAIA;AA1EA,CAAA","sourcesContent":["<template>\n  <div v-if=\"asyncDataStatus_ready\">\n    <h1>\n      {{ contest.name }}\n      <span v-if=\"!isStarted && !isFinished && !isPaused\">will start soon</span>\n      <span v-else-if=\"isPaused\">- next Stage will start soon</span>\n\n      <span v-else-if=\"isStarted\">- voting time</span>\n      <span v-else>is finished!</span>\n    </h1>\n    <div class=\"row\">\n      <div\n        :class=\"[\n          isOrganizer && !isStarted && !isFinished ? 'col-lg-1' : 'col-lg-2'\n        ]\"\n      ></div>\n\n      <div class=\"col-lg-8\">\n        <ContestClassicBracket v-if=\"!isStarted\" :contestId=\"id\" />\n        <div v-else-if=\"!user\">You can't view the bracket right now!s</div>\n        <ContestClassicVotingStage\n          v-else\n          :contestId=\"id\"\n          :stageId=\"contest.currentStage\"\n        />\n        <br />\n        <button\n          v-if=\"isOrganizer && !isStarted && !isFinished && !isPaused\"\n          class=\"btn btn-primary\"\n          @click=\"start()\"\n        >\n          Start Contest\n        </button>\n\n        <button\n          v-else-if=\"isOrganizer && isPaused && !isFinished\"\n          class=\"btn btn-primary\"\n          @click=\"start()\"\n        >\n          Start next Stage\n        </button>\n\n        <br />\n      </div>\n      <div v-if=\"!isStarted && isOrganizer && !isFinished\" class=\"col-lg-2\">\n        <RemovePlayer :contestId=\"id\" :stageId=\"contest.currentStage\" />\n      </div>\n\n      <div :class=\"[isOrganizer ? 'col-lg-1' : 'col-lg-2']\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport asyncDataStatus from \"@/mixins/asyncDataStatus\";\nimport { mapGetters, mapState, mapActions, mapMutations } from \"vuex\";\nimport { db } from \"@/main\";\nimport ContestClassicBracket from \"@/components/ContestClassicBracket.vue\";\nimport ContestClassicVotingStage from \"@/components/ContestClassicVotingStage.vue\";\nimport RemovePlayer from \"@/components/RemovePlayer.vue\";\n\nexport default {\n  name: \"PageContest\",\n\n  mixins: [asyncDataStatus],\n\n  components: {\n    ContestClassicBracket,\n    ContestClassicVotingStage,\n    RemovePlayer\n  },\n\n  props: {\n    id: {\n      required: true,\n      type: String\n    },\n\n    isAllowedJudge: {\n      required: true,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      newPlayer: null\n    };\n  },\n\n  computed: {\n    ...mapState({\n      contest(state) {\n        return state.contests.items[this.id];\n      }\n    }),\n\n    ...mapGetters({\n      user: \"auth/authUser\"\n    }),\n\n    isOrganizer() {\n      return this.user && this.user.role == \"organizer\";\n    },\n\n    isStarted() {\n      return this.contest.status == \"started\";\n    },\n\n    isFinished() {\n      return this.contest.status === \"finished\";\n    },\n\n    isPaused() {\n      return this.contest.status == \"paused\";\n    }\n  },\n\n  methods: {\n    ...mapActions(\"contests\", [\"fetchContest\", \"fetchContestRealTime\"]),\n\n    start() {\n      db.collection(\"contests\")\n        .doc(this.id)\n        .update({\n          status: \"started\"\n        });\n    }\n  },\n\n  created() {\n    this.fetchContest(this.id).then(() => {\n      this.asyncDataStatus_fetched();\n      this.fetchContestRealTime(this.id);\n    });\n  }\n};\n</script>\n\n<style scoped>\np {\n  text-align: center;\n}\n</style>\n"],"sourceRoot":"src/views"}]}