{"remainingRequest":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/views/PageContest.vue?vue&type=style&index=0&id=728553fa&scoped=true&lang=css&","dependencies":[{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/src/views/PageContest.vue","mtime":1573408857483},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/css-loader/index.js","mtime":1573384218588},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1573216109227},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/postcss-loader/src/index.js","mtime":1572617093660},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/cache-loader/dist/cjs.js","mtime":1573384218503},{"path":"/Users/alexandruserban/Documents/Web Development/MPS/MPS-Voting-App/node_modules/vue-loader/lib/index.js","mtime":1573216109227}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np {\n  text-align: center;\n}\n",{"version":3,"sources":["PageContest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA","file":"PageContest.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div v-if=\"asyncDataStatus_ready\">\n    <h1>\n      {{ contest.name }}\n      <span v-if=\"!isStarted && !isFinished && !isPaused\">will start soon</span>\n      <span v-else-if=\"isPaused\">- next Stage will start soon</span>\n\n      <span v-else-if=\"isStarted\">- voting time</span>\n      <span v-else>is finished!</span>\n    </h1>\n    <div class=\"row\">\n      <div\n        :class=\"[\n          isOrganizer && !isStarted && !isFinished ? 'col-lg-1' : 'col-lg-2'\n        ]\"\n      ></div>\n\n      <div class=\"col-lg-8\">\n        <ContestClassicBracket v-if=\"!isStarted\" :contestId=\"id\" />\n        <div v-else-if=\"!user\">You can't view the bracket right now!s</div>\n        <ContestClassicVotingStage\n          v-else\n          :contestId=\"id\"\n          :stageId=\"contest.currentStage\"\n        />\n        <br />\n        <button\n          v-if=\"isOrganizer && !isStarted && !isFinished && !isPaused\"\n          class=\"btn btn-primary\"\n          @click=\"start()\"\n        >\n          Start Contest\n        </button>\n\n        <button\n          v-else-if=\"isOrganizer && isPaused && !isFinished\"\n          class=\"btn btn-primary\"\n          @click=\"start()\"\n        >\n          Start next Stage\n        </button>\n\n        <br />\n      </div>\n      <div v-if=\"!isStarted && isOrganizer && !isFinished\" class=\"col-lg-2\">\n        <RemovePlayer :contestId=\"id\" :stageId=\"contest.currentStage\" />\n      </div>\n\n      <div :class=\"[isOrganizer ? 'col-lg-1' : 'col-lg-2']\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport asyncDataStatus from \"@/mixins/asyncDataStatus\";\nimport { mapGetters, mapState, mapActions, mapMutations } from \"vuex\";\nimport { db } from \"@/main\";\nimport ContestClassicBracket from \"@/components/ContestClassicBracket.vue\";\nimport ContestClassicVotingStage from \"@/components/ContestClassicVotingStage.vue\";\nimport RemovePlayer from \"@/components/RemovePlayer.vue\";\n\nexport default {\n  name: \"PageContest\",\n\n  mixins: [asyncDataStatus],\n\n  components: {\n    ContestClassicBracket,\n    ContestClassicVotingStage,\n    RemovePlayer\n  },\n\n  props: {\n    id: {\n      required: true,\n      type: String\n    },\n\n    isAllowedJudge: {\n      required: true,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      newPlayer: null\n    };\n  },\n\n  computed: {\n    ...mapState({\n      contest(state) {\n        return state.contests.items[this.id];\n      }\n    }),\n\n    ...mapGetters({\n      user: \"auth/authUser\"\n    }),\n\n    isOrganizer() {\n      return this.user && this.user.role == \"organizer\";\n    },\n\n    isStarted() {\n      return this.contest.status == \"started\";\n    },\n\n    isFinished() {\n      return this.contest.status === \"finished\";\n    },\n\n    isPaused() {\n      return this.contest.status == \"paused\";\n    }\n  },\n\n  methods: {\n    ...mapActions(\"contests\", [\"fetchContest\", \"fetchContestRealTime\"]),\n\n    start() {\n      db.collection(\"contests\")\n        .doc(this.id)\n        .update({\n          status: \"started\"\n        });\n    }\n  },\n\n  created() {\n    this.fetchContest(this.id).then(() => {\n      this.asyncDataStatus_fetched();\n      this.fetchContestRealTime(this.id);\n    });\n  }\n};\n</script>\n\n<style scoped>\np {\n  text-align: center;\n}\n</style>\n"]}]}